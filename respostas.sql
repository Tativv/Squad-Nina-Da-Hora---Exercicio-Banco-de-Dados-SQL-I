
-- SQL I - 1.1 Consulta Geral
SELECT * FROM ALUNOS;

-- SQL I - 1.2 Consulta Específica
SELECT 	
	CURSOS.NOME_CURSO AS 'Curso',
	CURSOS.DEPARTAMENTO AS 'Departamento Respónsavel'
FROM CURSOS;

-- SQL I - 1.3  Filtro Numérico
SELECT NOME_CURSO, CREDITOS
	FROM CURSOS
	WHERE CREDITOS > 4;

-- SQL I - 1.4 Filtro de Data
 SELECT 
	ALUNOS.NOME_ALUNO AS 'Nome de Aluno',
	ALUNOS.EMAIL AS 'Email'
FROM ALUNOS 
WHERE ALUNOS.DATA_INGRESSO >= '2023-01-01';

-- SQL I - 1.5 Filtro com AND e Ordenação
SELECT 
	A.NOME_ALUNO AS 'Nome do Aluno',
	M.NOTA_FINAL AS 'Nota Final'
FROM MATRICULAS	M
JOIN ALUNOS A ON M.ID_ALUNO = A.ID_ALUNO 
WHERE M.ID_ALUNO = 1 AND M.NOTA_FINAL >= 7.0
ORDER BY M.NOTA_FINAL DESC;

-- SQL I - 2.1 Valores Únicos
SELECT DISTINCT DEPARTAMENTO
	FROM CURSOS;

-- SQL I - 2.2 Lógica Condicional
SELECT MATRICULAS.ID_ALUNO AS 'ID Aluno',
	CASE WHEN MATRICULAS.NOTA_FINAL >= '7.0'
	     THEN 'Aprovado'
	     ELSE 'Reprovado'
	END AS 'Status'
FROM MATRICULAS;

-- SQL I - 2.3 Ordenação e Limite
SELECT 
	c.NOME_CURSO AS 'Curso',
	c.CREDITOS  AS 'Créditos'
FROM  CURSOS c
ORDER BY CREDITOS DESC 
LIMIT 1;

-- SQL I - 3.1 Contagem e Média
SELECT 
    COUNT(ID_MATRICULA) AS Total_Matriculas,
    AVG(NOTA_FINAL) AS Media_Geral
FROM MATRICULAS;

-- SQL I - 3.2  Agrupamento
SELECT 
	DEPARTAMENTO AS 'Departamento',
	COUNT(*) AS 'Qtde de Cursos'
FROM CURSOS
GROUP BY DEPARTAMENTO;

-- SQL I - 3.3  Filtro de Grupo
SELECT 
	DEPARTAMENTO AS 'Departamento',
	COUNT(*) AS 'Qtde de Cursos'
FROM CURSOS
GROUP BY DEPARTAMENTO
HAVING COUNT(*) >1;

-- SQL I - 4.1 Relatório de Desempenho	
SELECT
   ALUNOS.NOME_ALUNO AS NOME_ALUNO,
   CURSOS.NOME_CURSO  AS NOME_CURSO,
   MATRICULAS.NOTA_FINAL
FROM MATRICULAS
JOIN ALUNOS ON MATRICULAS.ID_ALUNO = ALUNOS.ID_ALUNO
JOIN CURSOS ON MATRICULAS.ID_CURSO = CURSOS.ID_CURSO
ORDER BY ALUNOS.NOME_ALUNO;

-- SQL I - 4.2 Busca por Alunos sem Matrícula
SELECT a.NOME_ALUNO AS 'Aluno sem Matrícula'
FROM ALUNOS a 
LEFT JOIN MATRICULAS m ON a.ID_ALUNO = m.ID_ALUNO
WHERE m.ID_MATRICULA IS NULL;

-- Desafio Final: O Aluno Destaque
SELECT
  a.NOME_ALUNO,
  ROUND(AVG(m.NOTA_FINAL), 2) AS MEDIA_NOTAS
FROM
  ALUNOS AS a
JOIN
  MATRICULAS AS m
  ON a.ID_ALUNO = m.ID_ALUNO
GROUP BY
  a.NOME_ALUNO
ORDER BY
  MEDIA_NOTAS DESC
LIMIT 1;
